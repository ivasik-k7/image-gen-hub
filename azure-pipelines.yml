trigger:
  - master

resources:
  - repo: self

variables:
  CONTAINER_IMAGE: "ikovtun7/ubuntu-python-poetry:latest"

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: MainStage
    displayName: "Main Stage"
    jobs:
      - job: MainJob
        container:
          image: "ikovtun7/ubuntu-python-poetry:latest"
          options: --user root
        steps:
          - script: poetry install
            displayName: "Install Dependencies"

          - script: poetry run ruff check .
            displayName: "Run Ruff"

          - script: |
              poetry run pytest .
              poetry run pytest . --cov=app --cov-report=xml
            displayName: "Run Pytest"

          - task: PublishCodeCoverageResults@1
            inputs:
              codeCoverageTool: "Cobertura"
              summaryFileLocation: "$(System.DefaultWorkingDirectory)/coverage.xml"
              reportDirectory: "$(System.DefaultWorkingDirectory)/.coverage"
              failIfCoverageEmpty: true
            condition: succeededOrFailed()
            displayName: "Publish Code Coverage Results"
  - stage: BuildStage
    dependsOn: MainStage
    displayName: "Build Stage"
    variables:
      TAG: "$(Build.BuildId)"
    jobs:
      - job: BuildJob
        displayName: "Build"
        container:
          image: "ikovtun7/ubuntu-python-poetry:latest"
          options: --user root
        steps:
          - task: Docker@2
            displayName: Build an image
            inputs:
              command: build
              dockerfile: "$(Build.SourcesDirectory)/Dockerfile"
              tags: |
                $(TAG)
